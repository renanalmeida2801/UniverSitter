{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luis Felippe\\\\Documents\\\\Faculdade\\\\PI2Oficial\\\\universitter\\\\src\\\\Components\\\\Form\\\\SitterProfilePicture.js\",\n  _s = $RefreshSig$();\nimport imageProfile from \"../../img/fotoPerfilCuidador.png\";\nimport { useRef, useState } from \"react\";\nimport styles from './SitterProfilePicture.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SitterProfilePicture() {\n  _s();\n  const inputRef = useRef(null);\n  const [image, setImage] = useState(\"\");\n  const handleImageClick = () => {\n    inputRef.current.click();\n  };\n\n  // const handleImageChange = (event) => {\n  //     const file = event.target.files[0];\n  //     setImage(event.target.files[0]);\n  // }\n  const handleImageChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        const img = new Image();\n        img.src = e.target.result;\n        img.onload = function () {\n          // Create a canvas element to draw the resized image\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          const maxSize = 180; // Define the maximum size for the profile picture\n\n          // Calculate the new dimensions while maintaining the aspect ratio\n          let width = img.width;\n          let height = img.height;\n          if (width > height) {\n            if (width > maxSize) {\n              height = Math.round(height *= maxSize / width);\n              width = maxSize;\n            }\n          } else {\n            if (height > maxSize) {\n              width = Math.round(width *= maxSize / height);\n              height = maxSize;\n            }\n          }\n\n          // Set the canvas dimensions to the new size\n          canvas.width = width;\n          canvas.height = height;\n\n          // Draw the resized image on the canvas\n          ctx.drawImage(img, 0, 0, width, height);\n\n          // Convert the canvas to a data URL and set it as the image source\n          const resizedImageURL = canvas.toDataURL('image/jpeg');\n          setImage(resizedImageURL);\n        };\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.picture,\n    onClick: handleImageClick,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.img,\n      src: image || imageProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: inputRef,\n      onChange: handleImageChange,\n      style: {\n        display: \"none\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(SitterProfilePicture, \"J5Sig4uxDuL2X58Dj4xlz9fRS6k=\");\n_c = SitterProfilePicture;\nexport default SitterProfilePicture;\nvar _c;\n$RefreshReg$(_c, \"SitterProfilePicture\");","map":{"version":3,"names":["imageProfile","useRef","useState","styles","jsxDEV","_jsxDEV","SitterProfilePicture","_s","inputRef","image","setImage","handleImageClick","current","click","handleImageChange","event","file","target","files","reader","FileReader","onload","e","img","Image","src","result","canvas","document","createElement","ctx","getContext","maxSize","width","height","Math","round","drawImage","resizedImageURL","toDataURL","readAsDataURL","className","picture","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","style","display","_c","$RefreshReg$"],"sources":["C:/Users/Luis Felippe/Documents/Faculdade/PI2Oficial/universitter/src/Components/Form/SitterProfilePicture.js"],"sourcesContent":["import imageProfile from \"../../img/fotoPerfilCuidador.png\"\r\nimport { useRef, useState } from \"react\";\r\nimport styles from './SitterProfilePicture.module.css'\r\n\r\n\r\nfunction SitterProfilePicture() {\r\n    const inputRef = useRef(null);\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const handleImageClick = () => {\r\n        inputRef.current.click()\r\n    }\r\n\r\n    // const handleImageChange = (event) => {\r\n    //     const file = event.target.files[0];\r\n    //     setImage(event.target.files[0]);\r\n    // }\r\n    const handleImageChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = function(e) {\r\n                const img = new Image();\r\n                img.src = e.target.result;\r\n\r\n                img.onload = function() {\r\n                    // Create a canvas element to draw the resized image\r\n                    const canvas = document.createElement('canvas');\r\n                    const ctx = canvas.getContext('2d');\r\n\r\n                    const maxSize = 180; // Define the maximum size for the profile picture\r\n\r\n                    // Calculate the new dimensions while maintaining the aspect ratio\r\n                    let width = img.width;\r\n                    let height = img.height;\r\n                    if (width > height) {\r\n                        if (width > maxSize) {\r\n                            height = Math.round(height *= maxSize / width);\r\n                            width = maxSize;\r\n                        }\r\n                    } else {\r\n                        if (height > maxSize) {\r\n                            width = Math.round(width *= maxSize / height);\r\n                            height = maxSize;\r\n                        }\r\n                    }\r\n\r\n                    // Set the canvas dimensions to the new size\r\n                    canvas.width = width;\r\n                    canvas.height = height;\r\n\r\n                    // Draw the resized image on the canvas\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n\r\n                    // Convert the canvas to a data URL and set it as the image source\r\n                    const resizedImageURL = canvas.toDataURL('image/jpeg');\r\n                    setImage(resizedImageURL);\r\n                };\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.picture} onClick={handleImageClick}>\r\n            <img className={styles.img} src={image || imageProfile}></img>\r\n            {/* {image ? <img src={image} alt=\"\" /> : <img src={imageProfile} alt=\"\" />} */}\r\n            <input type=\"file\" ref={inputRef} onChange={handleImageChange} style={{ display: \"none\" }}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SitterProfilePicture"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}